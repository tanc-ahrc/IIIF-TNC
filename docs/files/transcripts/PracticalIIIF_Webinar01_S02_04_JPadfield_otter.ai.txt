Joe Padfield  0:05  
See it is me again. Okay, so a little bit more time this time so I will try and slow down a little bit and not rush too quickly. First thing I'll say is what I'm going to present here, there's a lot in a short presentation. But as we said before, there's this presentation and the other presentations are being recorded, and the slides will be available, because I'm going to try and show you how to actually do something yourself in this one, so we'll see how that works. So I'm going to present this last talk. Again, Joe Padfield from the National Gallery in London. As part of some of the early work that was done in the Towards a National Collection project looking at how people can use existing IIIF resources to create their own IIIF presentations. Now, following the IIIF standards, each set of published images are described in a human readable text document called the IIIF manifest, so that's been mentioned a number of times, and Tom gave some sort of examples of that, and how people might play with those. So institutions organize their websites to present images, described in these manifests, however, public manifest links can be loaded into any compliant IIIF viewer. Okay, so again, to  restate images can be stored and served from one original institution but they can be presented in multiple different IIIF viewers at the same time. So there's an example link, you can see, I think it was dropped into the chat right at the beginning of the presentation of the of the webinar today, but it's a basic IIIF manifest link to a single image manifest from the National Gallery, and you can copy and paste that and put it into any IIIF viewer, which is on the web now. So if you've got the correct resources, he says in inverted commas, and support, users can do quite a lot with IIIF. So if you've got the technical support, and some time and energy. But what happens if you don't have access to, or you don't have your own image server? Okay, so that that kind of limits immediately what you might be able to do. So, historically what I did when I was playing with IIIF images is I would collect manifests so these are just a list of IIIF manifests, that I had copied and played for various testing, and I would normally go to project Mirador, they've changed their website link now, that's the link to their live Mirador three instance where I could then drop manifests in. This lovely image of the Annunciation by Crivelli which i've zoomed in on here on the right, is not part of that live demo. It is what this last manifest includes. So I've dropped that in and I can then view and play with those images but I need to do that manually, each time I want to actually view a manifest within Project Mirador. Now, there is a great resource being developed at the moment by the IIIF community to help researchers locate IIIF manifests. If you go and have a look at guides.iiif.io, they've got a long list of institutional websites. When with a pictorial demonstration of exactly how you find the manifest links in each of these sites, because it's often done slightly differently. So it's a very good one to explore. Now, individual researchers need to bookmark all of manifests they want to use. They then copy the links and manually load them into each manifest and load each manifest in when they want to view them. This can be hard to compare new images with previous links for groups or images because you have to remember which ones you want to look at, and then copy and paste them each time you want to export so it can be a bit of work, so it would be nice to make that easier for people to play with. So, do it yourself presentations. If you do not have your own web server, or programming background. There are still options for setting up a simple IIIF based website, I think Tom mentioned one, the Wax system within this presentation as well. We put together something called the Simple Site GitHub project, which has been set up to make it easier and I say easier in inverted commas because we would like to continue to make it even easier and so feedback is very, very helpful for researchers to use the free GitHub services to create and control their own website. Extensions have been developed to allow users to incorporate their own IIIF image presentations so Mirador, the curtain viewer that was shown from the V&A has been put in, and a couple of others already. And that's the URL for the source code and what it's supposed to do, that's the web page for the project that will also take you to the source code for simple site. Now GitHub, for those who don't know, GitHub, which is owned by Microsoft, I think since 2018. It provides internet hosting, free internet hosting, for software and project development, there are commercials, sort of paid-for services as well, but you can do an awful lot with it for free. In addition to the software document management, it provides a range of useful tools including GitHub Pages, to create project websites and GitHub actions to perform, automated processing and code check. Now GitHub was originally set up and get in general is a process for managing and organizing the development of software.

However, GitHub could also be used to develop and manage ideas, documents, protocols, processes, methods statements, it's a shared platform for collaborative development. So, what can we achieve there is quite broad. And part of this work we've been exploring how far we can push that. Now, the Simple Site is basically a set of code that's been written to allow users to create a set of web pages based on a simple edited JSON document. I'll come back to that in a second. The work to create simple site in general was supported by several projects, including the IIIF TaNC project, Towards a National Collection, but also the Heritage Pids triple Towards the National Collection project as well, but also the SSHOC EU project Horizon 2020 project, and the EPSRC ARTICT NG project. So there's a number of projects have directly made use of this technology already and I should also say that several the other TaNC Foundation projects have also used it to create their project website, so it's been quite useful within the foundational projects already. Now, what I'm going to talk about more in specifically is a copy of Simple Site, but has been developed to specifically demonstrate how simple site can be used to incorporate Mirador or IIIF viewers, so that people can have their own image presentation system freely presented on GitHub. Now I should say, as I don't think I've mentioned it before the URL you can see at the top there says: jpadfield@github.io. It is possible to set up what's called an organization on GitHub, so you can have NationalGallery.github.io which, which does exist, or any other institutional or project related web address, it doesn't necessarily have to be used as an individual. For this IIIF project. We've got dedicated site, as I've said, and individual groups of images can be automatically added to a Mirador viewer from a simple list of text list of IIIF manifests, or much more complex configuration documents to actually allow you to see lots of different things at the same time. So, what we had is this system can be used by individual researchers, or even small institutions to gather, organize, and present existing IIIF content. Detailed instructions have been provided describe how the system can be copied and edited to meet the needs of others. The system continues to be developed and we are continuing to look at the instructions, and to make it as easy as possible so very happy to have feedback and comments. The hardest part is actually working with JSON, as Tom mentioned. JSON documents if you get the formatting wrong slightly everything stops working, it's quite annoying, but there are some links in there for websites that will check your JSON documents and highlight where the errors are. If you've copied and pasted or change something and stops working, there are things to help you do that so, so you're not on your own there. 

But, basically to use simple Mirador you need to copy the system, edit a couple of JSON files, and you have your own websites, that's the kind of step process. To show you an example: so on the left here you have a page, or sort of zoom slightly down, scroll slightly down for a simple text example that shows a Mirador version three viewer in a web page with links and stuff at the top, and nice formatted presentation. And that was created using the code on the right. Now the way, Simple Site has been set up, you can tick a box, which is the one right here that says 'Display code', where this information is actually displayed in the webpage it's created and it makes it easier for people to see how it's been achieved, but if you ignore that or remove it, you just present your page as you want. So the page JSON object is actually what controls the page itself. It says it's a Mirador page, it says I'm pulling information from Mirador-simple.txt, which is this file up here, and then you can set a title and say what the content of the page is. There are detailed descriptions of this on the Simple Site web page, exactly how the formatting there works and what you need to put in, but effectively if you have that file, you create this webpage. So it loads in all three of these manifests and displays by default the first image in the first manifest. You can have more complex JSON files for the Mirador to actually create multiple windows at the same time and start on multiple images but it works very much the same way, And that is documented and described. You can, if you're really feeling confident and adventurous you can create quite complex presentations, so here we have an example of six different windows appeared in specific orders, showing Turners from six different collections. I haven't included the text describing how you do this because it's evil, but it is all on the website and you can go and explore and play with it, if you want. That was one that's quite difficult to get working, simple ones are easy. So what I'm going to give you now is a walkthrough process of forking Simple Mirador.

This will be a step by step run through that I have recently followed to copy and edit the system and it worked. Because of the time limitations I will not be fully explaining the reasons for each of the steps, but there is a lot more documentation on the Simple Site pages to explain how it works and you can also ask questions, obviously. It will be quick, but we are recording as I said before, and the slides will be made available. Just to reiterate forking, which is a wonderful term is a specific git related term but in this instance it basically means 'copy'. Okay, so we're going to copy it and edit it. Okay, so the first thing you need to do is to join GitHub, so you can go search for GitHub in Google and, or you can go in one of those links and follow it and you join, there's lots of instructions how to join in, you'll end up with a page similar to this. With your name. JPadfield.test for this one with your name here. Once you've joined your landing page, you can look like this. So the next step is to search for or go to the Simple Mirador site, which is JPadfield/Mirador, and that's the link there, and you go to the top right hand corner and you want to click on the fork option. It will then automatically copy your whole system, and drop you into a page like this, and as you can see it's slightly different it's JPadfield.test and it says it's forked from there. So there you have your own copy of the whole system. You now need to change a few of the settings. After you've copied it. So you click on the Settings option, and then there you scroll down until you get the Pages, GitHub Pages so this is what creates your webpages. When you fork the website, this is turned off, so you just need to turn it back on. So you click on the 'none', and you select 'master', it may well be 'main' (in some systems they've moved from master to main recently to have to remove the master / slave type ideas they've moved to mean instead). So it may be either. You click main, and then you then want to select from the next drop down, /docs, that's the one that's being used, that's where the actual webpages are going to be created, and then you click save. That will take you back up to the top. So let's see if you finish those settings there. If you scroll back down, you can actually see the GitHub Pages section again, It will actually display what the webpage will be to present the web pages that you're creating. What happens now you've saved that, is you need to go and actually turn on 'Actions'. Now GitHub Actions are what will automatically generate your web pages and clean everything up accrued to produce the Mirador viewer based on the information you add in your files. So if you go in there, it says it's been turned off when you forked it, that's a security issue, so you just need to click the green button and turn it back on. That will then take you back here, if you go to the Simple Mirador, you go back to the landing page which is here. If you then click the 'About' section, it's good to change this because this is still the wrong link that will take you back to the site you copied. So if you click on that you can go in and change the description if you want to put in the correct URL to your own website so you can see it's JPadfield.test, rather than just JPadfield. you can put your own one in there and it's safe, that you can see it will be updated. Now if you click on that it will take you to an exact copy of the website as it was before. You can see it's laid out exactly the same time with the instructions tab, and examples, and examples, and even a demo of the current year for the V&A. If you go back to your GitHub instance, and you click on the 'build' folder. So the build folder is where you actually have all of the information that will build your websites. So if you go in there and then click on the pages.JSON file, you can actually see the content. Now all we're going to do here is now edit the title of that first page it says 'title=national gallery' if you click on the 'Edit' button here, which is highlighted in red, you can then just go in and type 'my test' you scroll down to the bottom and 'commit to changes' which in this case is similar to 'save'. And then it's saved. Now what happens if you go back to the Action tab. Now there may be a slight pause here, but what will appear is a workflow entry will appear and it will start to build your website. Basically every time you edit one of those JSON files it will automatically then rebuild your website, it could take a few minutes to do and see how it goes. It'll finish. You'll get a little green tick. Now I should say it takes sometimes a minute or two for the actual webpages to be updated as something to do with the way GitHub works and it schedules an update and you just have to wait a little bit. So if you go to your web page, it may not have changed but if you wait a few minutes and hit refresh, a few times, eventually it'll change, but you can see here I've got here and it says, 'my test' so I've just completely changed that. So if you go back to the pages.JSON, you can edit any of the content change the image. Change the logos and anything you want, and you'll have your own webpage to work with. 

Now, if we start by clicking on the Simple Text example, this is the one I showed before. This page is created from this list of three manifests. So what we want to do is to change that. These automatically seed, this instance, and we want to edit that list. So if you go back to your Build folder where you were before, and you click on the Mirador-simple.text file. That brings up that list of three manifests, if we click on the 'Edit' button, we can then just copy and paste in a new manifest or a number of manifests you like, and then scroll down and hit 'commit changes' again. Now, if you go back to the Action buttons, you can then follow the fact that a new Action and happening, and hopefully after a few minutes well 30 seconds or whatever, it took 50 seconds, it will have built you your new webpages and you'll get a nice green tick, and then, again, you can go back to your webpage and see the difference. So, you can click on 'Simple Example' again, and in this case you can see that the default image, which is the one that appears in the top has been updated to show the Annunciation by Crivelli. Now if you click on the plus symbol, just you can interact with Mirador as the viewer itself, and you can see that the other three manifests are all still there as well. And you can click on these to add new windows, and create a presentation of the images you want, and actually engage for your content, do the work you want to do. These aren't saved in this simple example. So, but you could go, but the manifest themselves are saved, so when you come back to this page you will get the simple Annunciation, and then you just need to go get the others again. But that's how it works, and there you are. So effectively if you follow these steps, you can create your own instance of Simple Mirador and you can change the webpages, you can stick in your own manifests that you want to do, and you can then have that saved. Now this is a public webpage, you could share it with other people. you can collaborate with other people, and different things, and have conversations about images that you presented. Now GitHub as a whole, as I said is designed for software development, but you can have issues and forums and discussions. So you can technically then have a discussion about whether that set of images is the correct image to represent in a publication or presentation discussion. So there's a lot of then collaborative discussion you can do in relation to that moving forward. Now there's lots more information related to this on the Simple Site website and you can go and edit your own files and have a play. There are further details in the Simple Mirador example as well where you can edit them, and it shows you all the code that was used for each of the steps to do all what you want. And as I said before, I will try to give a nice, live view here. So that's the Simple Site, within there at the moment, there are a number of extensions in addition to Mirador, you can add in timelines, galleries, lists, Mirador viewer, you can also use the Curtain viewer, as an example of how you do that so it tells you where the extension is. And of course it's not going to work now because of the computer I'm having to do this presentation on, but it will work for you is this is a networking issue for me, but it will present the Curtain viewer and you can play with it and it gives you all the code and descriptions of exactly how that's done. So you can create your own presentation of the Curtain viewer. So, we will be working on other extensions, There are a lot of things you can do. The galleries and lists can be quite fun for doing different presentations of information, but it's generally something we'll be using throughout the project. I'm interested in incorporating IIIF  viewers and other things, we've already been doing, but it will be interesting to see what we can achieve. Now I will stop there as I have been speaking long enough, and we'll have a bit more time for questions. So, I'll stop sharing, and put the video back up.


